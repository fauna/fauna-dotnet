.TH "Fauna.QueryObj" 3 "Version 0.3.0-beta" "Fauna v10 .NET/C# Driver" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Fauna.QueryObj \- Represents a dictionary of FQL queries\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBFauna\&.Query\fP, and \fBFauna\&.IQueryFragment\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQueryObj\fP (IDictionary< string, \fBQuery\fP > v)"
.br
.RI "Initializes a new instance of the \fBQueryObj\fP class with the specified value\&. "
.ti -1c
.RI "override void \fBSerialize\fP (\fBMappingContext\fP ctx, \fBUtf8FaunaWriter\fP writer)"
.br
.RI "Serializes the query value\&. "
.ti -1c
.RI "override bool \fBEquals\fP (\fBQuery\fP? o)"
.br
.RI "Determines whether the specified \fBQueryObj\fP is equal to the current \fBQueryObj\fP\&. "
.ti -1c
.RI "override bool \fBEquals\fP (object? o)"
.br
.RI "Determines whether the specified object is equal to the current \fBQueryObj\fP\&. "
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.RI "The default hash function\&. "
.ti -1c
.RI "override string \fBToString\fP ()"
.br
.RI "Returns a string that represents the current \fBQueryObj\fP\&. "
.in -1c

Public Member Functions inherited from \fBFauna\&.Query\fP
.in +1c
.ti -1c
.RI "void \fBSerialize\fP (\fBMappingContext\fP ctx, \fBUtf8FaunaWriter\fP writer)"
.br
.RI "Serializes the query into the provided stream\&. "
.ti -1c
.RI "override int \fBGetHashCode\fP ()"
.br
.RI "Returns a hash code for the current query\&. "
.ti -1c
.RI "override bool \fBEquals\fP (object? otherObject)"
.br
.RI "Determines whether the specified object is equal to the current query\&. "
.ti -1c
.RI "bool \fBEquals\fP (\fBQuery\fP? otherQuery)"
.br
.RI "Determines whether the specified \fBQuery\fP is equal to the current query\&. "
.in -1c

Public Member Functions inherited from \fBFauna\&.IQueryFragment\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBoperator==\fP (\fBQueryObj\fP left, \fBQueryObj\fP right)"
.br
.RI "Determines whether two specified instances of \fBQueryObj\fP are equal\&. "
.ti -1c
.RI "static bool \fBoperator!=\fP (\fBQueryObj\fP left, \fBQueryObj\fP right)"
.br
.RI "Determines whether two specified instances of \fBQueryObj\fP are not equal\&. "
.in -1c

Static Public Member Functions inherited from \fBFauna\&.Query\fP
.in +1c
.ti -1c
.RI "static \fBQuery\fP \fBFQL\fP (ref \fBQueryStringHandler\fP handler)"
.br
.RI "Constructs an FQL query using the specified \fBQueryStringHandler\fP\&. "
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "IDictionary< string, \fBQuery\fP > \fBUnwrap\fP\fR [get]\fP"
.br
.RI "Gets the value of the specified type represented in the query\&. "
.in -1c
.SH "Detailed Description"
.PP 
Represents a dictionary of FQL queries\&. 
.PP
Definition at line \fB9\fP of file \fBQueryObj\&.cs\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Fauna\&.QueryObj\&.QueryObj (IDictionary< string, \fBQuery\fP > v)"

.PP
Initializes a new instance of the \fBQueryObj\fP class with the specified value\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP The value of the specified type to be represented in the query\&.
.RE
.PP

.PP
Definition at line \fB20\fP of file \fBQueryObj\&.cs\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "override bool Fauna\&.QueryObj\&.Equals (object? o)"

.PP
Determines whether the specified object is equal to the current \fBQueryObj\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIo\fP The object to compare with the current \fBQueryObj\fP\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if the specified object is equal to the current \fBQueryObj\fP; otherwise, false\&.
.RE
.PP

.PP
Definition at line \fB48\fP of file \fBQueryObj\&.cs\fP\&.
.SS "override bool Fauna\&.QueryObj\&.Equals (\fBQuery\fP? o)"

.PP
Determines whether the specified \fBQueryObj\fP is equal to the current \fBQueryObj\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fIo\fP The \fBQueryObj\fP to compare with the current \fBQueryObj\fP\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if the specified \fBQueryObj\fP is equal to the current \fBQueryObj\fP; otherwise, false\&.
.RE
.PP

.SS "override int Fauna\&.QueryObj\&.GetHashCode ()"

.PP
The default hash function\&. 
.PP
\fBReturns\fP
.RS 4
A hash code for the current \fBQueryObj\fP\&.
.RE
.PP

.PP
Definition at line \fB57\fP of file \fBQueryObj\&.cs\fP\&.
.SS "static bool Fauna\&.QueryObj\&.operator!= (\fBQueryObj\fP left, \fBQueryObj\fP right)\fR [static]\fP"

.PP
Determines whether two specified instances of \fBQueryObj\fP are not equal\&. 
.PP
\fBParameters\fP
.RS 4
\fIleft\fP The first \fBQueryObj\fP to compare\&.
.br
\fIright\fP The second \fBQueryObj\fP to compare\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if left and right are not equal; otherwise, false\&.
.RE
.PP

.PP
Definition at line \fB89\fP of file \fBQueryObj\&.cs\fP\&.
.SS "static bool Fauna\&.QueryObj\&.operator== (\fBQueryObj\fP left, \fBQueryObj\fP right)\fR [static]\fP"

.PP
Determines whether two specified instances of \fBQueryObj\fP are equal\&. 
.PP
\fBParameters\fP
.RS 4
\fIleft\fP The first \fBQueryObj\fP to compare\&.
.br
\fIright\fP The second \fBQueryObj\fP to compare\&.
.RE
.PP
\fBReturns\fP
.RS 4
true if left and right are equal; otherwise, false\&.
.RE
.PP

.PP
Definition at line \fB78\fP of file \fBQueryObj\&.cs\fP\&.
.SS "override void Fauna\&.QueryObj\&.Serialize (\fBMappingContext\fP ctx, \fBUtf8FaunaWriter\fP writer)"

.PP
Serializes the query value\&. 
.PP
\fBParameters\fP
.RS 4
\fIctx\fP The serialization context\&.
.br
\fIwriter\fP The writer to serialize the query value to\&.
.RE
.PP

.PP
Implements \fBFauna\&.IQueryFragment\fP\&.
.PP
Definition at line \fB30\fP of file \fBQueryObj\&.cs\fP\&.
.SS "override string Fauna\&.QueryObj\&.ToString ()"

.PP
Returns a string that represents the current \fBQueryObj\fP\&. 
.PP
\fBReturns\fP
.RS 4
A string that represents the current \fBQueryObj\fP\&.
.RE
.PP

.SH "Property Documentation"
.PP 
.SS "IDictionary<string, \fBQuery\fP> Fauna\&.QueryObj\&.Unwrap\fR [get]\fP"

.PP
Gets the value of the specified type represented in the query\&. 
.PP
Definition at line \fB14\fP of file \fBQueryObj\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Fauna v10 \&.NET/C# Driver from the source code\&.
