.TH "Fauna.Linq.DataContext.IIndex" 3 "Version 0.3.0-beta" "Fauna v10 .NET/C# Driver" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Fauna.Linq.DataContext.IIndex
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBFauna\&.Linq\&.IQuerySource< T >\fP\&.
.PP
Inherited by \fBFauna\&.Linq\&.DataContext\&.Index< Doc >\fP\&.
.SS "Properties"

.in +1c
.ti -1c
.RI "\fBICollection\fP \fBCollection\fP\fR [get]\fP"
.br
.ti -1c
.RI "string \fBName\fP\fR [get]\fP"
.br
.ti -1c
.RI "Type \fBDocType\fP\fR [get]\fP"
.br
.ti -1c
.RI "object[] \fBArgs\fP\fR [get]\fP"
.br
.in -1c
.SS "Additional Inherited Members"


Public Member Functions inherited from \fBFauna\&.Linq\&.IQuerySource< T >\fP
.in +1c
.ti -1c
.RI "IAsyncEnumerable< Page< T > > \fBPaginateAsync\fP (\fBQueryOptions\fP? queryOptions=null, CancellationToken cancel=default)"
.br
.ti -1c
.RI "IAsyncEnumerable< T > \fBToAsyncEnumerable\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "IEnumerable< T > \fBToEnumerable\fP ()"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBDistinct\fP ()"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBOrder\fP ()"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBOrderBy< K >\fP (Expression< Func< T, K > > keySelector)"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBOrderDescending\fP ()"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBOrderByDescending< K >\fP (Expression< Func< T, K > > keySelector)"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBReverse\fP ()"
.br
.ti -1c
.RI "\fBIQuerySource\fP< R > \fBSelect< R >\fP (Expression< Func< T, R > > selector)"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBSkip\fP (int count)"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBTake\fP (int count)"
.br
.ti -1c
.RI "\fBIQuerySource\fP< T > \fBWhere\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "bool \fBAll\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< bool > \fBAllAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "bool \fBAny\fP ()"
.br
.ti -1c
.RI "Task< bool > \fBAnyAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "bool \fBAny\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< bool > \fBAnyAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "int \fBCount\fP ()"
.br
.ti -1c
.RI "Task< int > \fBCountAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "int \fBCount\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< int > \fBCountAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBFirst\fP ()"
.br
.ti -1c
.RI "Task< T > \fBFirstAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBFirst\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< T > \fBFirstAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T? \fBFirstOrDefault\fP ()"
.br
.ti -1c
.RI "Task< T?> \fBFirstOrDefaultAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T? \fBFirstOrDefault\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< T?> \fBFirstOrDefaultAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBLast\fP ()"
.br
.ti -1c
.RI "Task< T > \fBLastAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBLast\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< T > \fBLastAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T? \fBLastOrDefault\fP ()"
.br
.ti -1c
.RI "Task< T?> \fBLastOrDefaultAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T? \fBLastOrDefault\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< T?> \fBLastOrDefaultAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "long \fBLongCount\fP ()"
.br
.ti -1c
.RI "Task< long > \fBLongCountAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "long \fBLongCount\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< long > \fBLongCountAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBMax\fP ()"
.br
.ti -1c
.RI "Task< T > \fBMaxAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "R \fBMax< R >\fP (Expression< Func< T, R > > selector)"
.br
.ti -1c
.RI "Task< R > \fBMaxAsync< R >\fP (Expression< Func< T, R > > selector, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBMin\fP ()"
.br
.ti -1c
.RI "Task< T > \fBMinAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "R \fBMin< R >\fP (Expression< Func< T, R > > selector)"
.br
.ti -1c
.RI "Task< R > \fBMinAsync< R >\fP (Expression< Func< T, R > > selector, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBSingle\fP ()"
.br
.ti -1c
.RI "Task< T > \fBSingleAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBSingle\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< T > \fBSingleAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBSingleOrDefault\fP ()"
.br
.ti -1c
.RI "Task< T > \fBSingleOrDefaultAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T \fBSingleOrDefault\fP (Expression< Func< T, bool > > predicate)"
.br
.ti -1c
.RI "Task< T > \fBSingleOrDefaultAsync\fP (Expression< Func< T, bool > > predicate, CancellationToken cancel=default)"
.br
.ti -1c
.RI "int \fBSum\fP (Expression< Func< T, int > > selector)"
.br
.ti -1c
.RI "Task< int > \fBSumAsync\fP (Expression< Func< T, int > > selector, CancellationToken cancel=default)"
.br
.ti -1c
.RI "long \fBSum\fP (Expression< Func< T, long > > selector)"
.br
.ti -1c
.RI "Task< long > \fBSumAsync\fP (Expression< Func< T, long > > selector, CancellationToken cancel=default)"
.br
.ti -1c
.RI "double \fBSum\fP (Expression< Func< T, double > > selector)"
.br
.ti -1c
.RI "Task< double > \fBSumAsync\fP (Expression< Func< T, double > > selector, CancellationToken cancel=default)"
.br
.ti -1c
.RI "double \fBAverage\fP (Expression< Func< T, double > > selector)"
.br
.ti -1c
.RI "Task< double > \fBAverageAsync\fP (Expression< Func< T, double > > selector, CancellationToken cancel=default)"
.br
.ti -1c
.RI "List< T > \fBToList\fP ()"
.br
.ti -1c
.RI "Task< List< T > > \fBToListAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "T[] \fBToArray\fP ()"
.br
.ti -1c
.RI "Task< T[]> \fBToArrayAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "HashSet< T > \fBToHashSet\fP ()"
.br
.ti -1c
.RI "Task< HashSet< T > > \fBToHashSetAsync\fP (CancellationToken cancel=default)"
.br
.ti -1c
.RI "HashSet< T > \fBToHashSet\fP (IEqualityComparer< T >? comparer)"
.br
.ti -1c
.RI "Task< HashSet< T > > \fBToHashSetAsync\fP (IEqualityComparer< T >? comparer, CancellationToken cancel=default)"
.br
.ti -1c
.RI "Dictionary< K, V > \fBToDictionary< K, V >\fP (Func< T, K > getKey, Func< T, V > getValue)"
.br
.ti -1c
.RI "Task< Dictionary< K, V > > \fBToDictionaryAsync< K, V >\fP (Func< T, K > getKey, Func< T, V > getValue, CancellationToken cancel=default)"
.br
.ti -1c
.RI "Dictionary< K, V > \fBToDictionary< K, V >\fP (Func< T, K > getKey, Func< T, V > getValue, IEqualityComparer< K >? comparer)"
.br
.ti -1c
.RI "Task< Dictionary< K, V > > \fBToDictionaryAsync< K, V >\fP (Func< T, K > getKey, Func< T, V > getValue, IEqualityComparer< K >? comparer, CancellationToken cancel=default)"
.br
.in -1c

Static Package Functions inherited from \fBFauna\&.Linq\&.IQuerySource< T >\fP
.SH "Detailed Description"
.PP 
Definition at line \fB133\fP of file \fBDataContext\&.cs\fP\&.
.SH "Property Documentation"
.PP 
.SS "object [] Fauna\&.Linq\&.DataContext\&.IIndex\&.Args\fR [get]\fP"

.PP
Implemented in \fBFauna\&.Linq\&.DataContext\&.Index< Doc >\fP\&.
.PP
Definition at line \fB138\fP of file \fBDataContext\&.cs\fP\&.
.SS "\fBICollection\fP Fauna\&.Linq\&.DataContext\&.IIndex\&.Collection\fR [get]\fP"

.PP
Implemented in \fBFauna\&.Linq\&.DataContext\&.Index< Doc >\fP\&.
.PP
Definition at line \fB135\fP of file \fBDataContext\&.cs\fP\&.
.SS "Type Fauna\&.Linq\&.DataContext\&.IIndex\&.DocType\fR [get]\fP"

.PP
Implemented in \fBFauna\&.Linq\&.DataContext\&.Index< Doc >\fP\&.
.PP
Definition at line \fB137\fP of file \fBDataContext\&.cs\fP\&.
.SS "string Fauna\&.Linq\&.DataContext\&.IIndex\&.Name\fR [get]\fP"

.PP
Implemented in \fBFauna\&.Linq\&.DataContext\&.Index< Doc >\fP\&.
.PP
Definition at line \fB136\fP of file \fBDataContext\&.cs\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Fauna v10 \&.NET/C# Driver from the source code\&.
